[{"path":[]},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://keyring.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://keyring.r-lib.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 keyring authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://keyring.r-lib.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Author, maintainer. Alec Wong. Contributor. . Copyright holder, funder.","code":""},{"path":"https://keyring.r-lib.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Csárdi G (2025). keyring: Access System Credential Store R. R package version 1.3.2.9001, https://keyring.r-lib.org/.","code":"@Manual{,   title = {keyring: Access the System Credential Store from R},   author = {Gábor Csárdi},   year = {2025},   note = {R package version 1.3.2.9001},   url = {https://keyring.r-lib.org/}, }"},{"path":"https://keyring.r-lib.org/dev/index.html","id":"keyring","dir":"","previous_headings":"","what":"Access the System Credential Store from R","title":"Access the System Credential Store from R","text":"keyring provides way securely manage secrets using operating system’s credential store. secret defined, persists “keyring” across multiple R sessions. keyring alternative using environment variables ’s bit secure secret never stored plain text, meaning can instance never accidentally upload GitHub. security, can also store secrets custom keyring always requires password unlock. keyring currently supports: macOS Keychain (backend_macos). Windows Credential Store (backend_wincred). Linux Secret Service API (backend_secret_service). also provides two backends available platforms: Encrypted files (backend_file) Environment variables (backend_env).","code":""},{"path":"https://keyring.r-lib.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access the System Credential Store from R","text":"Install package CRAN: recommend using pak install keyring ensure Linux system requirements automatically installed (instance Ubuntu requires libsecret-1-dev libssl-dev). install development version GitHub, use:","code":"# install.packages(\"pak\") pak::pak(\"keyring\") pak::pak(\"r-lib/keyring\")"},{"path":"https://keyring.r-lib.org/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Access the System Credential Store from R","text":"simplest usage requires key_set() key_get(): secret associated keyring. default, keyring use OS keyring (see default_backend() details), automatically unlocked log computer account. means secret stored securely, can accessed processes. want greater security can create custom keyring manually lock unlock. require enter custom password every time want access secret. Accessing key unlocks keyring, ’re really careful, might want lock ’ve retrieved value keyring_lock().","code":"# Interactively save a secret. This avoids typing the value of the secret # into the console as this could be recorded in your `.Rhistory` key_set(\"secret-name\")  # Later retrieve that secret key_get(\"secret-name\") keyring_create(\"mypackage\") key_set(\"secret-name\", keyring = \"mypackage\") key_get(\"secret-name\", keyring = \"mypackage\")"},{"path":"https://keyring.r-lib.org/dev/index.html","id":"github","dir":"","previous_headings":"Usage","what":"GitHub","title":"Access the System Credential Store from R","text":"use keyring GitHub, fall back environment variable backend. means want use key_get(\"mysecret\") need two things: Add new action secret repository. Make secret available workflow .yml, instance envvar backend doesn’t support custom keyrings, ’re using one locally ’ll need use default keyring GitHub.","code":"env:       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}       R_KEEP_PKG_SOURCE: yes       MY_SECRET: ${{ secrets.my_secret }}"},{"path":"https://keyring.r-lib.org/dev/index.html","id":"development-documentation","dir":"","previous_headings":"","what":"Development documentation","title":"Access the System Credential Store from R","text":"Please see writeup keyring internals, always, use source code.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_decode.html","id":null,"dir":"Reference","previous_headings":"","what":"Decode a raw password obtained by b_wincred_get_raw — b_wincred_decode","title":"Decode a raw password obtained by b_wincred_get_raw — b_wincred_decode","text":"Defaults 'auto' encoding, uses b_wincred_decode_auto accomplish decoding (works decoding either UTF-8 UTF-16LE encodings). case encoding specified, use convert raw password.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_decode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decode a raw password obtained by b_wincred_get_raw — b_wincred_decode","text":"","code":"b_wincred_decode(password, encoding = \"auto\")"},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_decode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decode a raw password obtained by b_wincred_get_raw — b_wincred_decode","text":"password raw byte string returned b_wincred_get_raw. encoding character value, specifying encoding use. Defaults 'auto', decode either UTF-8 UTF-16LE.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_decode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decode a raw password obtained by b_wincred_get_raw — b_wincred_decode","text":"character value containing password.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_decode_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Decode a raw password obtained by b_wincred_get_raw (UTF-8 and UTF-16LE only) — b_wincred_decode_auto","title":"Decode a raw password obtained by b_wincred_get_raw (UTF-8 and UTF-16LE only) — b_wincred_decode_auto","text":"attempts use UTF-16LE conversion 0 values password.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_decode_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decode a raw password obtained by b_wincred_get_raw (UTF-8 and UTF-16LE only) — b_wincred_decode_auto","text":"","code":"b_wincred_decode_auto(password)"},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_decode_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decode a raw password obtained by b_wincred_get_raw (UTF-8 and UTF-16LE only) — b_wincred_decode_auto","text":"password Raw vector coming keyring.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a key from a Wincred keyring — b_wincred_get","title":"Get a key from a Wincred keyring — b_wincred_get","text":"Get key Wincred keyring","code":""},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a key from a Wincred keyring — b_wincred_get","text":"","code":"b_wincred_get(self, private, service, username, keyring)"},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a key from a Wincred keyring — b_wincred_get","text":"service Service name. Must empty. username Username. Might empty. check key default keyring. yes, just return . Otherwise check keyring locked. locked, unlock . Get AES key keyring. Decrypt key AES key. Additionally, users may specify encoding use converting password byte-string, compatibility software python's keyring package. done via option, environment variable.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_set_with_raw_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a key on a Wincred keyring — b_wincred_set_with_raw_value","title":"Set a key on a Wincred keyring — b_wincred_set_with_raw_value","text":"Set key Wincred keyring","code":""},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_set_with_raw_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a key on a Wincred keyring — b_wincred_set_with_raw_value","text":"","code":"b_wincred_set_with_raw_value(   self,   private,   service,   username,   password,   keyring )"},{"path":"https://keyring.r-lib.org/dev/reference/b_wincred_set_with_raw_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a key on a Wincred keyring — b_wincred_set_with_raw_value","text":"service Service name. Must empty. username Username. Might empty. password key text store. Check using default keyring. yes, just store key done. Otherwise check keyring exists. , error finish. yes, check locked. yes, unlock . Encrypt key AES key, store . required, encoding can specified using either R option (keyring.encoding_windows) environment variable (KEYRING_ENCODING_WINDOWS). set, use one : options(keyring.encoding_windows = 'encoding-type') Sys.setenv(\"KEYRING_ENCODING_WINDOWS\" = 'encoding-type') list valid encodings, use iconvlist()","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backend.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract class of a minimal keyring backend — backend","title":"Abstract class of a minimal keyring backend — backend","text":"implement new keyring backend, need inherit class redefine get, set, set_with_value delete methods. Implementing list method optional. Additional methods can defined well.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract class of a minimal keyring backend — backend","text":"semantics various methods:   functions : get() queries secret keyring item. get_raw() similar get(), returns result raw vector. set() sets secret keyring item. secret read interactively keyboard. set_with_value() sets secret keyring item specified value. set_with_raw_value() sets secret keyring item byte sequence raw vector. delete() remotes keyring item. list() lists keyring items. list_raw() lists keyring items, also raw vectors. arguments: service String, name service. used find secret later. username String, username associated secret. can NULL, username belongs secret. uses value keyring_username, set. keyring String, name keyring work . makes sense platform supports multiple keyrings. NULL selects default (maybe ) keyring. password value secret, typically password, credential. prompt String, text displayed textbox.","code":"get(service, username = NULL, keyring = NULL) get_raw(service, username = NULL, keyring = NULL) set(service, username = NULL, keyring = NULL, prompt = \"Password: \") set_with_value(service, username = NULL, password = NULL,                keyring = NULL) set_with_raw_value(service, username = NULL, password = NULL,                keyring = NULL) delete(service, username = NULL, keyring = NULL) list(service = NULL, keyring = NULL) list_raw(service = NULL, keyring = NULL)"},{"path":[]},{"path":"https://keyring.r-lib.org/dev/reference/backend_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variable keyring backend — backend_env","title":"Environment variable keyring backend — backend_env","text":"simple keyring backend, stores/uses secrets environment variables R session.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backend_env.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Environment variable keyring backend — backend_env","text":"support multiple keyrings. also support listing keys, since way distinguish keys regular environment variables. support service names usernames: separated : character name environment variable. (Note environment variable typically set queried shell, can set queried R programming languages.) See backend documentation class's methods.","code":""},{"path":[]},{"path":"https://keyring.r-lib.org/dev/reference/backend_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variable keyring backend — backend_env","text":"","code":"if (FALSE) { # \\dontrun{ env <- backend_env$new() env$set(\"r-keyring-test\", username = \"donaldduck\") env$get(\"r-keyring-test\", username = \"donaldduck\") Sys.getenv(\"r-keyring-test:donaldduck\")  # This is an error env$list()  # Clean up env$delete(\"r-keyring-test\", username = \"donaldduck\") } # }"},{"path":"https://keyring.r-lib.org/dev/reference/backend_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Encrypted file keyring backend — backend_file","title":"Encrypted file keyring backend — backend_file","text":"simple keyring backend, stores/uses secrets encrypted files.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backend_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encrypted file keyring backend — backend_file","text":"supports multiple keyrings. See backend documentation individual methods.","code":""},{"path":[]},{"path":"https://keyring.r-lib.org/dev/reference/backend_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encrypted file keyring backend — backend_file","text":"","code":"if (FALSE) { # \\dontrun{ kb <- backend_file$new() } # }"},{"path":"https://keyring.r-lib.org/dev/reference/backend_keyrings.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract class of a backend that supports multiple keyrings — backend_keyrings","title":"Abstract class of a backend that supports multiple keyrings — backend_keyrings","text":"implement new keyring supports multiple keyrings, need inherit class redefine get, set, set_with_value, delete, list methods, also keyring management methods: keyring_create, keyring_list, keyring_delete, keyring_lock, keyring_unlock, keyring_is_locked, keyring_default keyring_set_default.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backend_keyrings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract class of a backend that supports multiple keyrings — backend_keyrings","text":"See backend first set methods. semantics keyring management methods:   keyring_create() creates new keyring. keyring_list() lists keyrings. keyring_delete() deletes keyring. good idea protect default keyring, /non-empty keyring password confirmation dialog. keyring_lock() locks keyring. keyring_unlock() unlocks keyring. keyring_is_locked() checks whether keyring locked. keyring_default() returns default keyring. keyring_set_default() sets default keyring. Arguments: keyring name keyring use create. methods can NULL select default keyring. password password keyring.","code":"keyring_create(keyring) keyring_list() keyring_delete(keyring = NULL) keyring_lock(keyring = NULL) keyring_unlock(keyring = NULL, password = NULL) keyring_is_locked(keyring = NULL) keyring_default() keyring_set_default(keyring = NULL)"},{"path":[]},{"path":"https://keyring.r-lib.org/dev/reference/backend_macos.html","id":null,"dir":"Reference","previous_headings":"","what":"macOS Keychain keyring backend — backend_macos","title":"macOS Keychain keyring backend — backend_macos","text":"backend default macOS. uses macOS native Keychain Service API.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backend_macos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"macOS Keychain keyring backend — backend_macos","text":"supports multiple keyrings. See backend documentation individual methods.","code":""},{"path":[]},{"path":"https://keyring.r-lib.org/dev/reference/backend_macos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"macOS Keychain keyring backend — backend_macos","text":"","code":"if (FALSE) { # \\dontrun{ ## This only works on macOS kb <- backend_macos$new() kb$keyring_create(\"foobar\") kb$set_default_keyring(\"foobar\") kb$set_with_value(\"service\", password = \"secret\") kb$get(\"service\") kb$delete(\"service\") kb$delete_keyring(\"foobar\") } # }"},{"path":"https://keyring.r-lib.org/dev/reference/backend_secret_service.html","id":null,"dir":"Reference","previous_headings":"","what":"Linux Secret Service keyring backend — backend_secret_service","title":"Linux Secret Service keyring backend — backend_secret_service","text":"backend default Linux. uses libsecret library, needs secret service daemon running (e.g. Gnome Keyring, KWallet). uses DBUS communicate secret service daemon.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backend_secret_service.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linux Secret Service keyring backend — backend_secret_service","text":"backend supports multiple keyrings. See backend documentation individual methods. is_available() method checks Secret Service daemon running system, trying connect . returns logical scalar, throws error, depending argument:   Argument: report_error Whether throw error Secret Service available.","code":"is_available = function(report_error = FALSE)"},{"path":[]},{"path":"https://keyring.r-lib.org/dev/reference/backend_secret_service.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linux Secret Service keyring backend — backend_secret_service","text":"","code":"if (FALSE) { # \\dontrun{ ## This only works on Linux, typically desktop Linux kb <- backend_secret_service$new() kb$keyring_create(\"foobar\") kb$set_default_keyring(\"foobar\") kb$set_with_value(\"service\", password = \"secret\") kb$get(\"service\") kb$delete(\"service\") kb$delete_keyring(\"foobar\") } # }"},{"path":"https://keyring.r-lib.org/dev/reference/backend_wincred.html","id":null,"dir":"Reference","previous_headings":"","what":"Windows Credential Store keyring backend — backend_wincred","title":"Windows Credential Store keyring backend — backend_wincred","text":"backend default Windows. uses native Windows Credential API, needs least Windows XP run.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backend_wincred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Windows Credential Store keyring backend — backend_wincred","text":"backend supports multiple keyrings. Note multiple keyrings implemented keyring R package, using dummy keyring keys represent keyrings locked/unlocked state. See backend documentation individual methods.","code":""},{"path":[]},{"path":"https://keyring.r-lib.org/dev/reference/backend_wincred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Windows Credential Store keyring backend — backend_wincred","text":"","code":"if (FALSE) { # \\dontrun{ ## This only works on Windows kb <- backend_wincred$new() kb$keyring_create(\"foobar\") kb$set_default_keyring(\"foobar\") kb$set_with_value(\"service\", password = \"secret\") kb$get(\"service\") kb$delete(\"service\") kb$delete_keyring(\"foobar\") } # }"},{"path":"https://keyring.r-lib.org/dev/reference/backends.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the default backend and default keyring — backends","title":"Select the default backend and default keyring — backends","text":"default backend selected based keyring_backend option. See base::options(). can set character string, backend_string class used create default backend. set, R_KEYRING_BACKEND environment variable checked. set, either, backend selected automatically, based OS: Windows, Windows Credential Store (\"wincred\") used. macOS, Keychain services selected (\"macos\"). Linux uses Secret Service API (\"secret_service\"), also checks service available. typically available systems GUI. file backend (\"file\") available, selected. operating systems, secrets stored environment variables (\"env\").","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the default backend and default keyring — backends","text":"","code":"default_backend(keyring = NULL)"},{"path":"https://keyring.r-lib.org/dev/reference/backends.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the default backend and default keyring — backends","text":"keyring Character string, name keyring use, NULL default keyring.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backends.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select the default backend and default keyring — backends","text":"backend object .","code":""},{"path":"https://keyring.r-lib.org/dev/reference/backends.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select the default backend and default keyring — backends","text":"backends support multiple keyrings. keyring selected : supplied keyring argument (NULL), keyring_keyring option. can change using options(keyring_keyring = \"NEWVALUE\") set, R_KEYRING_KEYRING environment variable. Change value Sys.setenv(R_KEYRING_KEYRING = \"NEWVALUE\"), either script .Renviron file. See base::Startup information using .Renviron Finally, neither set, OS default keyring used. Usually keyring automatically unlocked user logs .","code":""},{"path":[]},{"path":"https://keyring.r-lib.org/dev/reference/has_keyring_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Operations on keyrings — has_keyring_support","title":"Operations on keyrings — has_keyring_support","text":"platforms keyring supports multiple keyrings. includes Windows, macOS Linux (Secret Service) well. keyring collection keys can treated unit. keyring typically name password unlock . keyring unlocked, remains unlocked end user session, explicitly locked .","code":""},{"path":"https://keyring.r-lib.org/dev/reference/has_keyring_support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Operations on keyrings — has_keyring_support","text":"","code":"has_keyring_support()  keyring_create(keyring, password = NULL)  keyring_list()  keyring_delete(keyring = NULL)  keyring_lock(keyring = NULL)  keyring_unlock(keyring = NULL, password = NULL)  keyring_is_locked(keyring = NULL)"},{"path":"https://keyring.r-lib.org/dev/reference/has_keyring_support.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Operations on keyrings — has_keyring_support","text":"keyring name keyring create operate . functions keyring_create, can also NULL select default keyring. password initial password password unlock keyring. specified NULL, read console.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/has_keyring_support.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Operations on keyrings — has_keyring_support","text":"Platforms typically default keyring, unlocked automatically user logs . keyring need unlocked explicitly. can configure keyring use via R options environment variables (see default_backend()), can also specify directly default_backend() call, individual keyring calls. has_keyring_support checks backend supports multiple keyrings. keyring_create creates new keyring. asks password password specified. keyring_list lists existing keyrings. keyring_delete deletes keyring. Deleting non-empty keyring requires confirmation, default keyring can deleted specified explicitly. backends (e.g. Windows Credential Store), default keyring deleted . keyring_lock locks keyring. backends (e.g. Windows Credential Store), default keyring locked. keyring_unlock unlocks keyring. password specified, read interactively. keyring_is_locked queries whether keyring locked.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/has_keyring_support.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Operations on keyrings — has_keyring_support","text":"","code":"default_backend() #> Warning: Selecting ‘env’ backend. Secrets are stored in environment variables #> <keyring backend: ‘env’> #> Store secrets in environment variables. #>  #>  $get                  query a key from the keyring #>  $set                  set a key in the keyring (interactive) #>  $set_with_value       set a key in the keyring #>  $delete               delete a key #>  $list                 list keys in a keyring #>  $list_raw             list keys in a keyring as raw vectors #>  $has_keyring_support  TRUE if multiple keyrings are supported has_keyring_support() #> Warning: Selecting ‘env’ backend. Secrets are stored in environment variables #> [1] FALSE backend_env$new()$has_keyring_support() #> [1] FALSE  ## This might ask for a password, so we do not run it by default ## It only works if the default backend supports multiple keyrings if (FALSE) { # \\dontrun{ keyring_create(\"foobar\") key_set_with_value(\"R-test-service\", \"donaldduck\", password = \"secret\",                    keyring = \"foobar\") key_get(\"R-test-service\", \"donaldduck\", keyring = \"foobar\") key_list(keyring = \"foobar\") keyring_delete(keyring = \"foobar\") } # }"},{"path":"https://keyring.r-lib.org/dev/reference/key_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Operations on keys — key_get","title":"Operations on keys — key_get","text":"functions manipulate keys keyring. can think keyring secure key-value store.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/key_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Operations on keys — key_get","text":"","code":"key_get(service, username = NULL, keyring = NULL)  key_get_raw(service, username = NULL, keyring = NULL)  key_set(service, username = NULL, keyring = NULL, prompt = \"Password: \")  key_set_with_value(service, username = NULL, password = NULL, keyring = NULL)  key_set_with_raw_value(   service,   username = NULL,   password = NULL,   keyring = NULL )  key_delete(service, username = NULL, keyring = NULL)  key_list(service = NULL, keyring = NULL)  key_list_raw(service = NULL, keyring = NULL)"},{"path":"https://keyring.r-lib.org/dev/reference/key_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Operations on keys — key_get","text":"service Service name, character scalar. username Username, character scalar, NULL key associated username. keyring systems support multiple keyrings, specify name keyring use . NULL, default keyring used. See also has_keyring_support(). prompt character string displayed requesting secret password secret store. key_set, read console, interactively. key_set_with_value can also used non-interactive mode.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/key_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Operations on keys — key_get","text":"key_get returns character scalar, password confidential information stored key. key_list returns list keys, .e. service names usernames, data frame column names service username. service user name contains zero byte, allowed R string, entry shown NA warning (class keyring_warn_zero_byte_keys) thrown.  can use key_list_raw() function query keys. key_list_raw similar key_list returns service usernames raw vectors. useful service user names) contain zero bytes. column names: service, username, service_raw, username_raw.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/key_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Operations on keys — key_get","text":"key_get queries key keyring. key_get_raw queries key returns raw vector. credential stores allow storing byte sequence embedded null bytes, represented traditional null bytes terminated strings. know whether key contains embedded null, best query key_get_raw instead key_get. key_set sets key keyring. contents key read interactively terminal. key_set_with_value non-interactive pair key_set, set key keyring. key_set_raw_with_value sets key byte sequence raw vector. key_delete deletes key. key_list lists keys keyring, keys certain service (service NULL). key_list_raw() like key_list() also returns keys raw values. useful keys bytes appear R strings, e.g. zero byte.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/key_get.html","id":"encodings","dir":"Reference","previous_headings":"","what":"Encodings","title":"Operations on keys — key_get","text":"Windows, required, encoding can specified using either R option (keyring.encoding_windows) environment variable (KEYRING_ENCODING_WINDOWS). applied getting setting keys. option takes precedence environment variable, set. reserved primarily compatibility keys set software, Python's implementation keyring. list encodings, use iconvlist(), although noted every encoding can properly converted, even trivial cases. best results, use UTF-8 can.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/key_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Operations on keys — key_get","text":"","code":"# These examples use the default keyring, and they are interactive, # so, we don't run them by default if (FALSE) { # \\dontrun{ key_set(\"R-keyring-test-service\", \"donaldduck\") key_get(\"R-keyring-test-service\", \"donaldduck\") if (has_keyring_support()) key_list(service = \"R-keyring-test-service\") key_delete(\"R-keyring-test-service\", \"donaldduck\")  ## This is non-interactive, assuming that that default keyring ## is unlocked key_set_with_value(\"R-keyring-test-service\", \"donaldduck\",                    password = \"secret\") key_get(\"R-keyring-test-service\", \"donaldduck\") if (has_keyring_support()) key_list(service = \"R-keyring-test-service\") key_delete(\"R-keyring-test-service\", \"donaldduck\")  ## This is interactive using backend_file ## Set variables to be used in keyring kr_name <- \"my_keyring\" kr_service <- \"my_database\" kr_username <- \"my_username\"  ## Create a keyring and add an entry using the variables above kb <- keyring::backend_file$new() ## Prompt for the keyring password, used to unlock keyring kb$keyring_create(kr_name) ## Prompt for the secret/password to be stored in the keyring kb$set(kr_service, username=kr_username, keyring=kr_name) # Lock the keyring kb$keyring_lock(kr_name)  ## The keyring file is stored at ~/.config/r-keyring/ on Linux  ## Output the stored password keyring::backend_file$new()$get(service = kr_service,   user = kr_username,   keyring = kr_name) } # }"},{"path":"https://keyring.r-lib.org/dev/reference/keyring-package.html","id":null,"dir":"Reference","previous_headings":"","what":"keyring: Access the System Credential Store from R — keyring-package","title":"keyring: Access the System Credential Store from R — keyring-package","text":"Platform independent 'API' access operating system's credential store. Currently supports: 'Keychain' 'macOS', Credential Store 'Windows', Secret Service 'API' 'Linux', simple, platform independent stores implemented environment variables encrypted files. Additional storage back-ends can added easily. Platform independent API many system credential store implementations. Currently supported: Keychain macOS, Credential Store Windows, Secret Service API Linux, environment variables platforms.","code":""},{"path":"https://keyring.r-lib.org/dev/reference/keyring-package.html","id":"configuring-an-os-specific-backend","dir":"Reference","previous_headings":"","what":"Configuring an OS-specific backend","title":"keyring: Access the System Credential Store from R — keyring-package","text":"default operating system specific, described default_backend(). cases configure . MacOS: backend_macos Linux: backend_secret_service Windows: backend_wincred store secrets environment variables operating systems: backend_env","code":""},{"path":"https://keyring.r-lib.org/dev/reference/keyring-package.html","id":"query-secret-keys-in-a-keyring","dir":"Reference","previous_headings":"","what":"Query secret keys in a keyring","title":"keyring: Access the System Credential Store from R — keyring-package","text":"keyring can contain one many secrets (keys). key defined service name password. key defined, persists keyring store operating system. means keys persist beyond termination R session. Specifically, can define key , read key value completely independent R sessions. Setting secret interactively: key_set(). Setting secret script, .e. non-interactively: key_set_with_value(). Reading secret: key_get(), key_get_raw(). Listing secrets: key_list(), key_list_raw(). Deleting secret: key_delete().","code":""},{"path":"https://keyring.r-lib.org/dev/reference/keyring-package.html","id":"managing-keyrings","dir":"Reference","previous_headings":"","what":"Managing keyrings","title":"keyring: Access the System Credential Store from R — keyring-package","text":"keyring collection keys can treated unit. keyring typically name password unlock . keyring_create() keyring_delete() keyring_list() keyring_lock() keyring_unlock() Note platforms default keyring, key_get(), etc. use automatically. default keyring also convenient, OS unlocks automatically log , secrets available immediately. need explicitly deal keyrings keyring_* functions want use different keyring.","code":""},{"path":[]},{"path":"https://keyring.r-lib.org/dev/reference/keyring-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"keyring: Access the System Credential Store from R — keyring-package","text":"Maintainer: Gábor Csárdi csardi.gabor@gmail.com contributors: Alec Wong [contributor] Posit Software, PBC (ROR) [copyright holder, funder]","code":""},{"path":"https://keyring.r-lib.org/dev/news/index.html","id":"keyring-development-version","dir":"Changelog","previous_headings":"","what":"keyring (development version)","title":"keyring (development version)","text":"Now “file” backend selected default backend (via default_backend()) system keyring exists backend. want use “file” backend without system keyring, ’ll need select explicitly. See ?default_backend. keyring now depend assertthat, openssl, rappdirs sodium packages. New key_list_raw() method return keys raw vectors (#159).","code":""},{"path":"https://keyring.r-lib.org/dev/news/index.html","id":"keyring-132","dir":"Changelog","previous_headings":"","what":"keyring 1.3.2","title":"keyring 1.3.2","text":"CRAN release: 2023-12-10 keyring uses safer *printf() format strings (Secret Service backend).","code":""},{"path":"https://keyring.r-lib.org/dev/news/index.html","id":"keyring-131","dir":"Changelog","previous_headings":"","what":"keyring 1.3.1","title":"keyring 1.3.1","text":"CRAN release: 2022-10-27 user visible changes.","code":""},{"path":"https://keyring.r-lib.org/dev/news/index.html","id":"keyring-130","dir":"Changelog","previous_headings":"","what":"keyring 1.3.0","title":"keyring 1.3.0","text":"CRAN release: 2021-11-29 keyring_create() also backends support multiple keyrings now allow passing password creating new keyring (#114). key_set() can now use custom prompt (@pnacht, #112). keyring now handled better ‘Cancel’ button requesting password RStudio, error thrown case (#106).","code":""},{"path":"https://keyring.r-lib.org/dev/news/index.html","id":"keyring-120","dir":"Changelog","previous_headings":"","what":"keyring 1.2.0","title":"keyring 1.2.0","text":"CRAN release: 2021-04-28 now possible specify encoding secrets Windows (#88, @awong234). get_raw() method Secret Service backend works now (#87). Now file backend selected default Unix systems Secret Service available work (#95, @nwstephens). file backend now works keys username. backends use value keyring_username option, set, default username (#60).","code":""},{"path":"https://keyring.r-lib.org/dev/news/index.html","id":"keyring-110","dir":"Changelog","previous_headings":"","what":"keyring 1.1.0","title":"keyring 1.1.0","text":"CRAN release: 2018-07-16 File based backend (#53, @nbenn). Fix bugs key_set() Linux (#43, #51). Windows: support non-ascii characters spaces key_list() service keyring (#48, #49, @javierluraschi). Add support listing service keys env backend (#58, @javierluraschi). keyring now compatible R 3.1.x R 3.2.x. libsecret now optional Linux. available, keyring built without Secret Service backend (#55). Fix get_raw() method Windows. Windows: get() tries UTF-16LE encoding sting embedded zero bytes. allows getting secrets set Credential Manager (#56). Windows: fix list() secrets : (probably set externally) (#44).","code":""},{"path":"https://keyring.r-lib.org/dev/news/index.html","id":"keyring-100","dir":"Changelog","previous_headings":"","what":"keyring 1.0.0","title":"keyring 1.0.0","text":"CRAN release: 2017-09-09 First public release.","code":""}]
